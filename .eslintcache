[{"C:\\Users\\roseb\\Documents\\Personal\\chat-frontend\\src\\index.js":"1","C:\\Users\\roseb\\Documents\\Personal\\chat-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\roseb\\Documents\\Personal\\chat-frontend\\src\\constants.ts":"3","C:\\Users\\roseb\\Documents\\Personal\\chat-frontend\\src\\components\\App\\index.js":"4","C:\\Users\\roseb\\Documents\\Personal\\chat-frontend\\src\\components\\Chat\\index.tsx":"5","C:\\Users\\roseb\\Documents\\Personal\\chat-frontend\\src\\components\\Sidebar\\index.tsx":"6","C:\\Users\\roseb\\Documents\\Personal\\chat-frontend\\src\\components\\Lobby\\index.tsx":"7","C:\\Users\\roseb\\Documents\\Personal\\chat-frontend\\src\\components\\Room\\index.tsx":"8","C:\\Users\\roseb\\Documents\\Personal\\chat-frontend\\src\\components\\SidebarMember\\index.tsx":"9","C:\\Users\\roseb\\Documents\\Personal\\chat-frontend\\src\\context\\ChatContext.ts":"10","C:\\Users\\roseb\\Documents\\Personal\\chat-frontend\\src\\services\\SocketService.ts":"11"},{"size":717,"mtime":1607425705067,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":286,"mtime":1607362924984,"results":"15","hashOfConfig":"13"},{"size":516,"mtime":1607424784350,"results":"16","hashOfConfig":"13"},{"size":3506,"mtime":1607362925714,"results":"17","hashOfConfig":"13"},{"size":1202,"mtime":1607424250173,"results":"18","hashOfConfig":"13"},{"size":1900,"mtime":1607500958530,"results":"19","hashOfConfig":"13"},{"size":332,"mtime":1607424956867,"results":"20","hashOfConfig":"13"},{"size":452,"mtime":1607422336788,"results":"21","hashOfConfig":"13"},{"size":268,"mtime":1607425803801,"results":"22","hashOfConfig":"13"},{"size":841,"mtime":1607425708860,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"ijghcb",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"C:\\Users\\roseb\\Documents\\Personal\\chat-frontend\\src\\index.js",[],["50","51"],"C:\\Users\\roseb\\Documents\\Personal\\chat-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\roseb\\Documents\\Personal\\chat-frontend\\src\\constants.ts",[],["52","53"],"C:\\Users\\roseb\\Documents\\Personal\\chat-frontend\\src\\components\\App\\index.js",[],"C:\\Users\\roseb\\Documents\\Personal\\chat-frontend\\src\\components\\Chat\\index.tsx",["54"],"import { Avatar, IconButton } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport MoodIcon from '@material-ui/icons/Mood';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport './style.css';\r\nimport { ChatMessage } from '../../types';\r\nimport { ChatEvent } from '../../constants';\r\nimport { MessageStatus } from '../../constants';\r\nimport io from 'socket.io-client';\r\n\r\ninterface ChatProps {\r\n    messages: ChatMessage[];\r\n}\r\n\r\nconst Chat = ({ messages }: ChatProps) => {\r\n    const { current: socketInstance } = useRef(io('localhost:9000'));\r\n    const [input, setInput] = useState('');\r\n\r\n    const sendMessage = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        e.preventDefault();\r\n        const messageDetails: ChatMessage = {\r\n            author: 'Rose',\r\n            message: input,\r\n            timestamp: new Date().toISOString(),\r\n            status: MessageStatus.SENT\r\n        };\r\n        setInput('');\r\n\r\n        console.log('sending message: ' + JSON.stringify(messageDetails));\r\n        socketInstance.emit(ChatEvent.MESSAGE, messageDetails);\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n                <Avatar />\r\n                <div className=\"chat__headerInfo\">\r\n                    <h3>Room Name</h3>\r\n                    <p> Last seen at...</p>\r\n                </div>\r\n                <div className=\"chat__headerIcons\">\r\n                    <IconButton>\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFileIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"chat__body\">\r\n                {messages.map(({ author, message, timestamp, status }, i) => {\r\n                    // TODO temp\r\n                    const received = true;\r\n                    \r\n                    return (\r\n                        <p\r\n                            key={i}\r\n                            className={`chat__message ${received && 'chat__message--receiver'\r\n                                }`}\r\n                        >\r\n                            <span className=\"chat__person\">{author}</span>\r\n                            {message}\r\n                            <span className=\"chat__timestamp\">{timestamp}</span>\r\n                        </p>\r\n                    );\r\n                })}\r\n            </div>\r\n            <div className=\"chat__footer\">\r\n                <IconButton>\r\n                    <MoodIcon />\r\n                </IconButton>\r\n                <form>\r\n                    <input\r\n                        value={input}\r\n                        onChange={(e) => setInput(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Start typing..\"\r\n                    />\r\n                    <button onClick={sendMessage} type=\"submit\">\r\n                        Send\r\n          </button>\r\n                </form>\r\n                <IconButton>\r\n                    <MicIcon />\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n","C:\\Users\\roseb\\Documents\\Personal\\chat-frontend\\src\\components\\Sidebar\\index.tsx",[],"C:\\Users\\roseb\\Documents\\Personal\\chat-frontend\\src\\components\\Lobby\\index.tsx",["55"],"C:\\Users\\roseb\\Documents\\Personal\\chat-frontend\\src\\components\\Room\\index.tsx",["56"],"import React, { useState } from 'react';\r\nimport './style.css';\r\nimport Chat from '../Chat';\r\nimport Sidebar from '../Sidebar';\r\n\r\nconst Room = () => {\r\n\tconst [ messages, setMessages ] = useState([]);\r\n\treturn (\r\n\t\t<div className=\"room\">\r\n\t\t\t<Sidebar />\r\n\t\t\t<Chat messages={messages} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Room;\r\n","C:\\Users\\roseb\\Documents\\Personal\\chat-frontend\\src\\components\\SidebarMember\\index.tsx",[],"C:\\Users\\roseb\\Documents\\Personal\\chat-frontend\\src\\context\\ChatContext.ts",[],"C:\\Users\\roseb\\Documents\\Personal\\chat-frontend\\src\\services\\SocketService.ts",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":7,"column":27,"nodeType":"63","messageId":"64","endLine":7,"endColumn":36},{"ruleId":"61","severity":1,"message":"65","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":13},{"ruleId":"61","severity":1,"message":"66","line":7,"column":20,"nodeType":"63","messageId":"64","endLine":7,"endColumn":31},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'setMessages' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]